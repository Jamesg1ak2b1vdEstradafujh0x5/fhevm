{
  "db_name": "PostgreSQL",
  "query": "\n            WITH selected_computations AS (\n              -- Get set of complete transactions\n              SELECT c.tenant_id, c.output_handle, c.transaction_id, ah.handle\n              FROM computations c LEFT JOIN allowed_handles ah ON c.output_handle = ah.handle\n              WHERE ( c.is_completed = false\n              AND c.is_error = false\n              AND c.transaction_id IS NULL )\n              OR c.transaction_id IN (\n                -- Select full transactions out of the buckets we identified below\n                SELECT transaction_id FROM computations\n                WHERE is_completed = false\n                AND is_error = false\n                AND dependence_chain_id IN (\n                  WITH dep_chains AS (\n                    -- Find oldest uncomputed computations and get their buckets\n                    SELECT dependence_chain_id\n                    FROM computations\n                    WHERE is_completed = false\n                    AND is_error = false\n                    ORDER BY schedule_order\n                    LIMIT $2\n                  )\n                  SELECT DISTINCT dependence_chain_id FROM dep_chains\n                )\n                ORDER BY schedule_order\n                LIMIT $1\n              )\n            )\n            -- Acquire all computations from this transaction set\n            SELECT c.tenant_id, c.output_handle, c.dependencies, c.fhe_operation, c.is_scalar,\n                   sc.handle IS NOT NULL AS is_allowed, c.dependence_chain_id,\n                   COALESCE(c.transaction_id) as transaction_id\n            FROM computations c, selected_computations sc\n            WHERE c.tenant_id = sc.tenant_id\n            AND c.output_handle = sc.output_handle\n            FOR UPDATE SKIP LOCKED\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "tenant_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 1,
        "name": "output_handle",
        "type_info": "Bytea"
      },
      {
        "ordinal": 2,
        "name": "dependencies",
        "type_info": "ByteaArray"
      },
      {
        "ordinal": 3,
        "name": "fhe_operation",
        "type_info": "Int2"
      },
      {
        "ordinal": 4,
        "name": "is_scalar",
        "type_info": "Bool"
      },
      {
        "ordinal": 5,
        "name": "is_allowed",
        "type_info": "Bool"
      },
      {
        "ordinal": 6,
        "name": "dependence_chain_id",
        "type_info": "Bytea"
      },
      {
        "ordinal": 7,
        "name": "transaction_id",
        "type_info": "Bytea"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      null,
      true,
      null
    ]
  },
  "hash": "35ae56d2063315e3d03852e3664b1a4c5b522a0b44de98cdf6e2271700a98ce2"
}
